<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TPS - Settings</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome Icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <!-- SweetAlert2 -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.7.12/sweetalert2.min.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/css/admin.css">
    
    <!-- Page-specific CSS -->
    <link rel="stylesheet" href="/css/departments.css">
    <style>
        .tax-bracket-card {
            transition: all 0.3s ease;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 1.5rem;
        }
        .tax-bracket-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
        }
        .tax-bracket-header {
            background-color: #f8f9fa;
            padding: 1rem 1.5rem;
            border-bottom: 1px solid #e9ecef;
        }
        .tax-bracket-body {
            padding: 1.5rem;
        }
        .tax-rate-badge {
            font-size: 0.9rem;
            padding: 0.35rem 0.65rem;
            border-radius: 50px;
            background-color: #007bff;
            color: white;
        }
        .bracket-range {
            font-weight: 500;
            color: #495057;
        }
        .action-buttons {
            display: flex;
            gap: 0.5rem;
        }
        .test-tax-box {
            background-color: #f8f9fa;
            border-radius: 10px;
            padding: 1.5rem;
            margin-bottom: 2rem;
        }
        .country-flag {
            width: 24px;
            height: 24px;
            border-radius: 50%;
            object-fit: cover;
            margin-right: 0.5rem;
        }
        .settings-tabs .nav-link {
            color: #495057;
            font-weight: 500;
            padding: 0.75rem 1.25rem;
            border-radius: 0.375rem;
            margin-right: 0.5rem;
        }
        .settings-tabs .nav-link.active {
            background-color: #007bff;
            color: white;
        }
        .currency-badge {
            background-color: #e9ecef;
            color: #495057;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            font-size: 0.75rem;
            font-weight: 600;
        }
    </style>
</head>
<body>
    <!-- Sidebar Overlay for Mobile -->
    <div class="sidebar-overlay" id="sidebarOverlay"></div>

    <!-- Sidebar -->
    <%- include('./partials/sidebar', { currentPage: 'settings' }) %>

    <!-- Main Content -->
    <div class="main-content" id="mainContent">
        <!-- Header -->
        <%- include('./partials/header', { 
            title: 'Tax Settings', 
            user: typeof user !== 'undefined' ? user : { name: 'User', email: '', avatar: 'U' } 
        }) %>

        <!-- Page Content -->
        <main class="dashboard-content">
            <div class="container-fluid px-4">
                <div class="d-flex justify-content-between align-items-center mb-4 mt-3">
                    <h5 class="mb-0">Tax Settings Management</h5>
                    <button class="btn btn-primary" id="addTaxBracketBtn">
                        <i class="fas fa-plus me-1"></i> Add Tax Bracket
                    </button>
                </div>

                <!-- Tabs Navigation -->
                <ul class="nav nav-pills settings-tabs mb-4" id="settingsTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="tax-brackets-tab" data-bs-toggle="pill" data-bs-target="#tax-brackets" type="button" role="tab" aria-controls="tax-brackets" aria-selected="true">
                            <i class="fas fa-percent me-1"></i> Tax Brackets
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="tax-test-tab" data-bs-toggle="pill" data-bs-target="#tax-test" type="button" role="tab" aria-controls="tax-test" aria-selected="false">
                            <i class="fas fa-calculator me-1"></i> Tax Calculator
                        </button>
                    </li>
                </ul>

                <!-- Tab Content -->
                <div class="tab-content" id="settingsTabsContent">
                    <!-- Tax Brackets Tab -->
                    <div class="tab-pane fade show active" id="tax-brackets" role="tabpanel" aria-labelledby="tax-brackets-tab">
                        <!-- Filters -->
                        <div class="row mb-4">
                            <div class="col-md-3">
                                <label for="countryFilter" class="form-label">Country</label>
                                <select class="form-select" id="countryFilter">
                                    <option value="">All Countries</option>
                                    <option value="MW">Malawi</option>
                                    <option value="US">United States</option>
                                    <option value="GB">United Kingdom</option>
                                    <option value="ZA">South Africa</option>
                                    <option value="ZM">Zambia</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="currencyFilter" class="form-label">Currency</label>
                                <select class="form-select" id="currencyFilter">
                                    <option value="">All Currencies</option>
                                    <option value="MWK">Malawian Kwacha</option>
                                    <option value="USD">US Dollar</option>
                                    <option value="GBP">British Pound</option>
                                    <option value="ZAR">South African Rand</option>
                                    <option value="ZMW">Zambian Kwacha</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="statusFilter" class="form-label">Status</label>
                                <select class="form-select" id="statusFilter">
                                    <option value="">All Status</option>
                                    <option value="active">Active</option>
                                    <option value="inactive">Inactive</option>
                                </select>
                            </div>
                            <div class="col-md-3 d-flex align-items-end">
                                <button class="btn btn-outline-secondary w-100" id="applyFiltersBtn">
                                    <i class="fas fa-filter me-1"></i> Apply Filters
                                </button>
                            </div>
                        </div>

                        <!-- Tax Brackets List -->
                        <div class="row" id="taxBracketsContainer">
                            <!-- Tax brackets will be loaded here -->
                        </div>

                        <!-- Loading and Empty States -->
                        <div class="text-center py-5" id="loadingState">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-3">Loading tax brackets...</p>
                        </div>

                        <div class="text-center py-5 d-none" id="emptyState">
                            <i class="fas fa-percent fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No tax brackets found</h5>
                            <p class="text-muted">Get started by adding your first tax bracket</p>
                            <button class="btn btn-primary mt-2" id="addFirstBracketBtn">
                                <i class="fas fa-plus me-1"></i> Add Tax Bracket
                            </button>
                        </div>
                    </div>

                    <!-- Tax Calculator Tab -->
                    <div class="tab-pane fade" id="tax-test" role="tabpanel" aria-labelledby="tax-test-tab">
                        <div class="test-tax-box">
                            <h6 class="mb-3"><i class="fas fa-calculator me-2"></i>Test Tax Calculation</h6>
                            <div class="row">
                                <div class="col-md-4">
                                    <label for="testCountry" class="form-label">Country</label>
                                    <select class="form-select" id="testCountry">
                                        <option value="MW">Malawi</option>
                                        <option value="US">United States</option>
                                        <option value="GB">United Kingdom</option>
                                        <option value="ZA">South Africa</option>
                                        <option value="ZM">Zambia</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label for="testCurrency" class="form-label">Currency</label>
                                    <select class="form-select" id="testCurrency">
                                        <option value="MWK">MWK - Malawian Kwacha</option>
                                        <option value="USD">USD - US Dollar</option>
                                        <option value="GBP">GBP - British Pound</option>
                                        <option value="ZAR">ZAR - South African Rand</option>
                                        <option value="ZMW">ZMW - Zambian Kwacha</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label for="testIncome" class="form-label">Gross Income</label>
                                    <div class="input-group">
                                        <span class="input-group-text" id="currencySymbol">MWK</span>
                                        <input type="number" class="form-control" id="testIncome" placeholder="Enter amount">
                                    </div>
                                </div>
                            </div>
                            <div class="mt-3">
                                <button class="btn btn-success" id="calculateTaxBtn">
                                    <i class="fas fa-calculator me-1"></i> Calculate Tax
                                </button>
                            </div>
                        </div>

                        <!-- Results -->
                        <div class="card d-none" id="taxResultCard">
                            <div class="card-header bg-light">
                                <h6 class="mb-0">Tax Calculation Results</h6>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <table class="table table-sm">
                                            <tr>
                                                <th>Gross Income:</th>
                                                <td id="resultGrossIncome" class="text-end">-</td>
                                            </tr>
                                            <tr>
                                                <th>Tax Amount:</th>
                                                <td id="resultTaxAmount" class="text-end">-</td>
                                            </tr>
                                            <tr class="table-primary">
                                                <th>Net Income:</th>
                                                <td id="resultNetIncome" class="text-end fw-bold">-</td>
                                            </tr>
                                            <tr>
                                                <th>Effective Tax Rate:</th>
                                                <td id="resultTaxRate" class="text-end">-</td>
                                            </tr>
                                        </table>
                                    </div>
                                    <div class="col-md-6">
                                        <h6 class="mb-3">Brackets Used:</h6>
                                        <div id="bracketsUsedList">
                                            <!-- Brackets will be listed here -->
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- Add/Edit Tax Bracket Modal -->
    <div class="modal fade" id="taxBracketModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Add Tax Bracket</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="taxBracketForm">
                        <input type="hidden" id="bracketId">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="bracketName" class="form-label">Bracket Name *</label>
                                    <input type="text" class="form-control" id="bracketName" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="taxRate" class="form-label">Tax Rate (%) *</label>
                                    <input type="number" class="form-control" id="taxRate" min="0" max="100" step="0.01" required>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="minAmount" class="form-label">Minimum Amount *</label>
                                    <input type="number" class="form-control" id="minAmount" min="0" step="0.01" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="maxAmount" class="form-label">Maximum Amount</label>
                                    <input type="number" class="form-control" id="maxAmount" min="0" step="0.01">
                                    <div class="form-text">Leave empty for no upper limit</div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="country" class="form-label">Country *</label>
                                    <select class="form-select" id="country" required>
                                        <option value="MW">Malawi</option>
                                        <option value="US">United States</option>
                                        <option value="GB">United Kingdom</option>
                                        <option value="ZA">South Africa</option>
                                        <option value="ZM">Zambia</option>
                                        <option value="OTHER">Other</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="currency" class="form-label">Currency *</label>
                                    <select class="form-select" id="currency" required>
                                        <option value="MWK">MWK - Malawian Kwacha</option>
                                        <option value="USD">USD - US Dollar</option>
                                        <option value="GBP">GBP - British Pound</option>
                                        <option value="ZAR">ZAR - South African Rand</option>
                                        <option value="ZMW">ZMW - Zambian Kwacha</option>
                                        <option value="OTHER">Other</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="effectiveFrom" class="form-label">Effective From *</label>
                                    <input type="date" class="form-control" id="effectiveFrom" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="effectiveTo" class="form-label">Effective To</label>
                                    <input type="date" class="form-control" id="effectiveTo">
                                    <div class="form-text">Leave empty for no expiration</div>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3 form-check">
                            <input type="checkbox" class="form-check-input" id="isActive" checked>
                            <label class="form-check-label" for="isActive">Active</label>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="saveTaxBracketBtn">Save Tax Bracket</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <!-- jQuery (for simpler DOM manipulation) -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <!-- Axios -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.2/axios.min.js"></script>
    <!-- SweetAlert2 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.7.12/sweetalert2.all.min.js"></script>
    
    <!-- Custom JS -->
    <script src="/js/admin.js"></script>
    
    <script>
        // Get token from localStorage
        const authToken = localStorage.getItem('authToken');
        if (!authToken) {
            window.location.href = '/login';
        }

        // Set up Axios defaults
        axios.defaults.baseURL = '/api';
        axios.defaults.headers.common['Authorization'] = `Bearer ${authToken}`;
        
        // DOM Elements
        const taxBracketsContainer = document.getElementById('taxBracketsContainer');
        const loadingState = document.getElementById('loadingState');
        const emptyState = document.getElementById('emptyState');
        const taxBracketModal = new bootstrap.Modal(document.getElementById('taxBracketModal'));
        const taxResultCard = document.getElementById('taxResultCard');
        
        // Country to currency mapping
        const countryCurrencyMap = {
            'MW': 'MWK',
            'US': 'USD',
            'GB': 'GBP',
            'ZA': 'ZAR',
            'ZM': 'ZMW'
        };
        
        // Currency symbols
        const currencySymbols = {
            'MWK': 'MK',
            'USD': '$',
            'GBP': '£',
            'ZAR': 'R',
            'ZMW': 'ZK'
        };

        // Format currency
        function formatCurrency(amount, currency = 'MWK') {
            const symbol = currencySymbols[currency] || currency;
            return `${symbol} ${amount.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`;
        }

        // Format date
        function formatDate(dateString) {
            if (!dateString) return 'No expiration';
            const date = new Date(dateString);
            return date.toLocaleDateString();
        }

        // Load tax brackets
        async function loadTaxBrackets(filters = {}) {
            showLoading();
            try {
                const params = new URLSearchParams();
                if (filters.country) params.append('country', filters.country);
                if (filters.currency) params.append('currency', filters.currency);
                if (filters.status) params.append('isActive', filters.status === 'active');
                
                const response = await axios.get(`/tax-brackets?${params.toString()}`);
                renderTaxBrackets(response.data.data);
            } catch (error) {
                console.error('Error loading tax brackets:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.response?.data?.error || 'Failed to load tax brackets'
                });
            } finally {
                hideLoading();
            }
        }

        // Render tax brackets
        function renderTaxBrackets(brackets) {
            taxBracketsContainer.innerHTML = '';
            
            if (!brackets || brackets.length === 0) {
                emptyState.classList.remove('d-none');
                return;
            }
            
            emptyState.classList.add('d-none');
            
            brackets.forEach(bracket => {
                const bracketElement = document.createElement('div');
                bracketElement.className = 'col-md-6 col-lg-4';
                bracketElement.innerHTML = `
                    <div class="card tax-bracket-card">
                        <div class="tax-bracket-header d-flex justify-content-between align-items-center">
                            <h6 class="mb-0">${bracket.bracketName}</h6>
                            <span class="tax-rate-badge">${bracket.taxRate}%</span>
                        </div>
                        <div class="tax-bracket-body">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="bracket-range">
                                    ${formatCurrency(bracket.minAmount, bracket.currency)} 
                                    - 
                                    ${bracket.maxAmount ? formatCurrency(bracket.maxAmount, bracket.currency) : '∞'}
                                </span>
                                <span class="currency-badge">${bracket.currency}</span>
                            </div>
                            <div class="mb-3">
                                <small class="text-muted">
                                    <i class="fas fa-globe me-1"></i> ${getCountryName(bracket.country)}
                                </small>
                            </div>
                            <div class="mb-3">
                                <small class="text-muted">
                                    Effective: ${formatDate(bracket.effectiveFrom)} 
                                    ${bracket.effectiveTo ? ` to ${formatDate(bracket.effectiveTo)}` : 'onwards'}
                                </small>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="badge ${bracket.isActive ? 'bg-success' : 'bg-secondary'}">
                                    ${bracket.isActive ? 'Active' : 'Inactive'}
                                </span>
                                <div class="action-buttons">
                                    <button class="btn btn-sm btn-outline-primary edit-bracket" data-id="${bracket._id}">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger delete-bracket" data-id="${bracket._id}">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                taxBracketsContainer.appendChild(bracketElement);
            });
            
            // Add event listeners to buttons
            document.querySelectorAll('.edit-bracket').forEach(btn => {
                btn.addEventListener('click', () => editTaxBracket(btn.dataset.id));
            });
            
            document.querySelectorAll('.delete-bracket').forEach(btn => {
                btn.addEventListener('click', () => deleteTaxBracket(btn.dataset.id));
            });
        }

        // Get country name from code
        function getCountryName(code) {
            const countries = {
                'MW': 'Malawi',
                'US': 'United States',
                'GB': 'United Kingdom',
                'ZA': 'South Africa',
                'ZM': 'Zambia',
                'OTHER': 'Other'
            };
            return countries[code] || code;
        }

        // Show loading state
        function showLoading() {
            loadingState.classList.remove('d-none');
            taxBracketsContainer.classList.add('d-none');
        }

        // Hide loading state
        function hideLoading() {
            loadingState.classList.add('d-none');
            taxBracketsContainer.classList.remove('d-none');
        }

        // Open modal to add new tax bracket
        function openAddModal() {
            document.getElementById('modalTitle').textContent = 'Add Tax Bracket';
            document.getElementById('taxBracketForm').reset();
            document.getElementById('bracketId').value = '';
            document.getElementById('effectiveFrom').valueAsDate = new Date();
            document.getElementById('isActive').checked = true;
            
            taxBracketModal.show();
        }

        // Edit tax bracket
        async function editTaxBracket(id) {
            try {
                const response = await axios.get(`/tax-brackets/${id}`);
                const bracket = response.data.data;
                
                document.getElementById('modalTitle').textContent = 'Edit Tax Bracket';
                document.getElementById('bracketId').value = bracket._id;
                document.getElementById('bracketName').value = bracket.bracketName;
                document.getElementById('taxRate').value = bracket.taxRate;
                document.getElementById('minAmount').value = bracket.minAmount;
                document.getElementById('maxAmount').value = bracket.maxAmount || '';
                document.getElementById('country').value = bracket.country;
                document.getElementById('currency').value = bracket.currency;
                
                // Format dates for input fields (YYYY-MM-DD)
                document.getElementById('effectiveFrom').value = new Date(bracket.effectiveFrom).toISOString().split('T')[0];
                if (bracket.effectiveTo) {
                    document.getElementById('effectiveTo').value = new Date(bracket.effectiveTo).toISOString().split('T')[0];
                } else {
                    document.getElementById('effectiveTo').value = '';
                }
                
                document.getElementById('isActive').checked = bracket.isActive;
                
                taxBracketModal.show();
            } catch (error) {
                console.error('Error loading tax bracket:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.response?.data?.error || 'Failed to load tax bracket'
                });
            }
        }

        // Save tax bracket
        async function saveTaxBracket() {
            const formData = {
                bracketName: document.getElementById('bracketName').value,
                taxRate: parseFloat(document.getElementById('taxRate').value),
                minAmount: parseFloat(document.getElementById('minAmount').value),
                maxAmount: document.getElementById('maxAmount').value ? parseFloat(document.getElementById('maxAmount').value) : null,
                country: document.getElementById('country').value,
                currency: document.getElementById('currency').value,
                effectiveFrom: document.getElementById('effectiveFrom').value,
                effectiveTo: document.getElementById('effectiveTo').value || null,
                isActive: document.getElementById('isActive').checked
            };
            
            const bracketId = document.getElementById('bracketId').value;
            
            try {
                if (bracketId) {
                    // Update existing bracket
                    await axios.put(`/tax-brackets/${bracketId}`, formData);
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Tax bracket updated successfully',
                        timer: 2000,
                        showConfirmButton: false
                    });
                } else {
                    // Create new bracket
                    await axios.post('/tax-brackets', formData);
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Tax bracket created successfully',
                        timer: 2000,
                        showConfirmButton: false
                    });
                }
                
                taxBracketModal.hide();
                loadTaxBrackets(getCurrentFilters());
            } catch (error) {
                console.error('Error saving tax bracket:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.response?.data?.error || 'Failed to save tax bracket'
                });
            }
        }

        // Delete tax bracket
        async function deleteTaxBracket(id) {
            const result = await Swal.fire({
                title: 'Are you sure?',
                text: 'This will deactivate the tax bracket. You can reactivate it later.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel'
            });
            
            if (result.isConfirmed) {
                try {
                    await axios.delete(`/tax-brackets/${id}`);
                    Swal.fire({
                        icon: 'success',
                        title: 'Deleted!',
                        text: 'Tax bracket has been deactivated.',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    loadTaxBrackets(getCurrentFilters());
                } catch (error) {
                    console.error('Error deleting tax bracket:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.response?.data?.error || 'Failed to delete tax bracket'
                    });
                }
            }
        }

        // Test tax calculation
        async function testTaxCalculation() {
            const country = document.getElementById('testCountry').value;
            const currency = document.getElementById('testCurrency').value;
            const income = parseFloat(document.getElementById('testIncome').value);
            
            if (!income || income <= 0) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Invalid Input',
                    text: 'Please enter a valid income amount'
                });
                return;
            }
            
            try {
                const response = await axios.post('/tax-brackets/test-calculation', {
                    grossPay: income,
                    country: country,
                    currency: currency
                });
                
                const result = response.data.data;
                
                // Update results
                document.getElementById('resultGrossIncome').textContent = formatCurrency(income, currency);
                document.getElementById('resultTaxAmount').textContent = formatCurrency(result.amount, currency);
                document.getElementById('resultNetIncome').textContent = formatCurrency(income - result.amount, currency);
                document.getElementById('resultTaxRate').textContent = `${result.rate.toFixed(2)}%`;
                
                // Show brackets used
                const bracketsList = document.getElementById('bracketsUsedList');
                if (result.bracketsUsed && result.bracketsUsed.length > 0) {
                    bracketsList.innerHTML = result.bracketsUsed.map(bracket => `
                        <div class="mb-2 p-2 border rounded">
                            <div class="d-flex justify-content-between">
                                <strong>${bracket.name}</strong>
                                <span class="badge bg-primary">${bracket.rate}%</span>
                            </div>
                            <div class="text-muted small">
                                ${formatCurrency(bracket.min, currency)} - ${bracket.max ? formatCurrency(bracket.max, currency) : '∞'}
                            </div>
                        </div>
                    `).join('');
                } else {
                    bracketsList.innerHTML = '<p class="text-muted">No bracket details available</p>';
                }
                
                // Show results card
                taxResultCard.classList.remove('d-none');
                
            } catch (error) {
                console.error('Error testing tax calculation:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.response?.data?.error || 'Failed to calculate tax'
                });
            }
        }

        // Get current filter values
        function getCurrentFilters() {
            return {
                country: document.getElementById('countryFilter').value,
                currency: document.getElementById('currencyFilter').value,
                status: document.getElementById('statusFilter').value
            };
        }

        // Update currency symbol based on selected currency
        function updateCurrencySymbol() {
            const currency = document.getElementById('testCurrency').value;
            document.getElementById('currencySymbol').textContent = currencySymbols[currency] || currency;
        }

        // Initialize the page
        document.addEventListener('DOMContentLoaded', () => {
            // Load initial tax brackets
            loadTaxBrackets();
            
            // Event listeners
            document.getElementById('addTaxBracketBtn').addEventListener('click', openAddModal);
            document.getElementById('addFirstBracketBtn').addEventListener('click', openAddModal);
            document.getElementById('saveTaxBracketBtn').addEventListener('click', saveTaxBracket);
            document.getElementById('applyFiltersBtn').addEventListener('click', () => {
                loadTaxBrackets(getCurrentFilters());
            });
            document.getElementById('calculateTaxBtn').addEventListener('click', testTaxCalculation);
            
            // Update currency symbol when currency changes
            document.getElementById('testCurrency').addEventListener('change', updateCurrencySymbol);
            
            // Set default currency symbol
            updateCurrencySymbol();
            
            // Sync country and currency in test form
            document.getElementById('testCountry').addEventListener('change', function() {
                const currency = countryCurrencyMap[this.value] || 'MWK';
                document.getElementById('testCurrency').value = currency;
                updateCurrencySymbol();
            });
        });
    </script>
</body>
</html>